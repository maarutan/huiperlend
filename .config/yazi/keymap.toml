# ██╗  ██╗███████╗██╗   ██╗███╗   ███╗ █████╗ ██████╗ 
# ██║ ██╔╝██╔════╝╚██╗ ██╔╝████╗ ████║██╔══██╗██╔══██╗
# █████╔╝ █████╗   ╚████╔╝ ██╔████╔██║███████║██████╔╝
# ██╔═██╗ ██╔══╝    ╚██╔╝  ██║╚██╔╝██║██╔══██║██╔═══╝ 
# ██║  ██╗███████╗   ██║   ██║ ╚═╝ ██║██║  ██║██║     
# ╚═╝  ╚═╝╚══════╝   ╚═╝   ╚═╝     ╚═╝╚═╝  ╚═╝╚═╝   

[manager]

keymap = [
  { on = ["s", "p", "p"], run = "plugin sudo paste", desc = "sudo paste" },
  { on = ["s", "P"], run = "plugin sudo paste -f", desc = "sudo paste force" },
  { on = ["s", "r"], run = "plugin sudo rename", desc = "sudo rename" },
  { on = ["s", "p", "l"], run = "plugin sudo link", desc = "sudo link" },
  { on = ["s", "p", "L"], run = "plugin sudo link -r", desc = "sudo link relative path" },
  { on = ["s", "a"], run = "plugin sudo create", desc = "sudo create" },
  { on = ["s", "d"], run = "plugin sudo remove", desc = "sudo trash" },
  { on = ["s", "D"], run = "plugin sudo remove -P", desc = "sudo delete" },
	{ on = "<Esc>", run = "escape",             desc = "Exit visual mode, clear selected, or cancel search" },
	{ on = "<C-[>", run = "escape",             desc = "Exit visual mode, clear selected, or cancel search" },
	{ on = "q",     run = "quit",               desc = "Quit the process" },
	{ on = "Q",     run = "quit --no-cwd-file", desc = "Quit the process without outputting cwd-file" },
	{ on = "<A-q>", run = "close",              desc = "Close the current tab, or quit if it's last" },
	{ on = "<C-z>", run = "suspend",            desc = "Suspend the process" },

	# Hopping
	{ on = "k", run = "arrow -1", desc = "Move cursor up" },
	{ on = "j", run = "arrow 1",  desc = "Move cursor down" },

	{ on = "<Up>",    run = "arrow -1", desc = "Move cursor up" },
	{ on = "<Down>",  run = "arrow 1",  desc = "Move cursor down" },

	{ on = "<C-u>", run = "arrow -50%",  desc = "Move cursor up half page" },
	{ on = "<C-d>", run = "arrow 50%",   desc = "Move cursor down half page" },
	{ on = "<C-b>", run = "arrow -100%", desc = "Move cursor up one page" },
	{ on = "<C-f>", run = "arrow 100%",  desc = "Move cursor down one page" },

	{ on = "<S-PageUp>",   run = "arrow -50%",  desc = "Move cursor up half page" },
	{ on = "<S-PageDown>", run = "arrow 50%",   desc = "Move cursor down half page" },
	{ on = "<PageUp>",     run = "arrow -100%", desc = "Move cursor up one page" },
	{ on = "<PageDown>",   run = "arrow 100%",  desc = "Move cursor down one page" },

	{ on = [ "g", "g" ], run = "arrow top", desc = "Move cursor to the top" },
	{ on = "G",          run = "arrow bot",  desc = "Move cursor to the bottom" },

	# Navigation
	{ on = "h", run = "leave", desc = "Go back to the parent directory" },
	{ on = "l", run = "enter", desc = "Enter the child directory" },

	{ on = "<Left>",  run = "leave", desc = "Go back to the parent directory" },
	{ on = "<Right>", run = "enter", desc = "Enter the child directory" },

	{ on = "H", run = "back",    desc = "Go back to the previous directory" },
	{ on = "L", run = "forward", desc = "Go forward to the next directory" },

	# Toggle
	{ on = "<Space>", run = [ "toggle", "arrow 1" ], desc = "Toggle the current selection state" },
	{ on = "<C-a>",   run = "toggle_all --state=on", desc = "Select all files" },
	{ on = "<C-r>",   run = "toggle_all",            desc = "Invert selection of all files" },

	# Visual mode
	{ on = "v", run = "visual_mode",         desc = "Enter visual mode (selection mode)" },
	{ on = "V", run = "visual_mode --unset", desc = "Enter visual mode (unset mode)" },

	# Seeking
	{ on = "K", run = "seek -5", desc = "Seek up 5 units in the preview" },
	{ on = "J", run = "seek 5",  desc = "Seek down 5 units in the preview" },

	# Spotting
	{ on = "<Tab>", run = "spot", desc = "Spot hovered file" },

	# Operation
	{ on = "o",         run = "open",                        desc = "Open selected files" },
	{ on = "O",         run = "open --interactive",          desc = "Open selected files interactively" },
	{ on = "<Enter>",   run = "open",                        desc = "Open selected files" },
	{ on = "<S-Enter>", run = "open --interactive",          desc = "Open selected files interactively" },
	{ on = [ "y", "y"],         run = "yank",                        desc = "Yank selected files (copy)" },
	{ on = "x",         run = "yank --cut",                  desc = "Yank selected files (cut)" },
	{ on = "p",         run = "paste",                       desc = "Paste yanked files" },
	{ on = "P",         run = "paste --force",               desc = "Paste yanked files (overwrite if the destination exists)" },
	{ on = "-",         run = "link",                        desc = "Symlink the absolute path of yanked files" },
	{ on = "_",         run = "link --relative",             desc = "Symlink the relative path of yanked files" },
	{ on = "<C-->",     run = "hardlink",                    desc = "Hardlink yanked files" },
	{ on = "Y",         run = "unyank",                      desc = "Cancel the yank status" },
	{ on = "X",         run = "unyank",                      desc = "Cancel the yank status" },
	{ on = "d",         run = "remove",                      desc = "Trash selected files" },
	{ on = "D",         run = "remove --permanently",        desc = "Permanently delete selected files" },
	{ on = "a",         run = "create",                      desc = "Create a file (ends with / for directories)" },
	{ on = "r",         run = "rename --cursor=before_ext",  desc = "Rename selected file(s)" },
	{ on = ";",         run = "shell --interactive",         desc = "Run a shell command" },
	{ on = ":",         run = "shell --block --interactive", desc = "Run a shell command (block until finishes)" },
	{ on = "<C-h>",     run = "hidden toggle",               desc = "Toggle the visibility of hidden files" },
	{ on = ".",     run = "hidden toggle",               desc = "Toggle the visibility of hidden files" },
	{ on = "s",         run = "search --via=fd",             desc = "Search files by name via fd" },
	{ on = "S",         run = "search --via=rg",             desc = "Search files by content via ripgrep" },
	{ on = "<C-s>",     run = "escape --search",             desc = "Cancel the ongoing search" },
	{ on = "z",         run = "plugin zoxide",               desc = "Jump to a directory via zoxide" },
	{ on = [ "g", "o" ],        run = "plugin zoxide",               desc = "Jump to a directory via zoxide" },
	{ on =  "f" ,         run = "plugin fzf",                  desc = "Jump to a file/directory via fzf" },

	# Linemode
	{ on = [ "m", "s" ], run = "linemode size",        desc = "Linemode: size" },
	{ on = [ "m", "p" ], run = "linemode permissions", desc = "Linemode: permissions" },
	{ on = [ "m", "b" ], run = "linemode btime",       desc = "Linemode: btime" },
	{ on = [ "m", "m" ], run = "linemode mtime",       desc = "Linemode: mtime" },
	{ on = [ "m", "o" ], run = "linemode owner",       desc = "Linemode: owner" },
	{ on = [ "m", "n" ], run = "linemode none",        desc = "Linemode: none" },

	# Copy
	{ on = [ "y", "p" ], run = "copy path",             desc = "Copy the file path" },
	{ on = [ "y", "d" ], run = "copy dirname",          desc = "Copy the directory path" },
	{ on = [ "y", "f" ], run = "copy filename",         desc = "Copy the filename" },
	{ on = [ "y", "n" ], run = "copy name_without_ext", desc = "Copy the filename without extension" },

	# Filter
	{ on = "f", run = "filter --smart", desc = "Filter files" },

	# Find
	{ on = "F", run = "find --smart",            desc = "Find next file" },
	{ on = "/", run = "find --smart",            desc = "Find next file" },
	{ on = "?", run = "find --previous --smart", desc = "Find previous file" },
	{ on = "n", run = "find_arrow",              desc = "Goto the next found" },
	{ on = "N", run = "find_arrow --previous",   desc = "Goto the previous found" },

	# Sorting
	{ on = [ ",", "m" ], run = [ "sort mtime --reverse=no", "linemode mtime" ], desc = "Sort by modified time" },
	{ on = [ ",", "M" ], run = [ "sort mtime --reverse", "linemode mtime" ],    desc = "Sort by modified time (reverse)" },
	{ on = [ ",", "b" ], run = [ "sort btime --reverse=no", "linemode btime" ], desc = "Sort by birth time" },
	{ on = [ ",", "B" ], run = [ "sort btime --reverse", "linemode btime" ],    desc = "Sort by birth time (reverse)" },
	{ on = [ ",", "e" ], run = "sort extension --reverse=no",                   desc = "Sort by extension" },
	{ on = [ ",", "E" ], run = "sort extension --reverse",                      desc = "Sort by extension (reverse)" },
	{ on = [ ",", "a" ], run = "sort alphabetical --reverse=no",                desc = "Sort alphabetically" },
	{ on = [ ",", "A" ], run = "sort alphabetical --reverse",                   desc = "Sort alphabetically (reverse)" },
	{ on = [ ",", "n" ], run = "sort natural --reverse=no",                     desc = "Sort naturally" },
	{ on = [ ",", "N" ], run = "sort natural --reverse",                        desc = "Sort naturally (reverse)" },
	{ on = [ ",", "s" ], run = [ "sort size --reverse=no", "linemode size" ],   desc = "Sort by size" },
	{ on = [ ",", "S" ], run = [ "sort size --reverse", "linemode size" ],      desc = "Sort by size (reverse)" },
	{ on = [ ",", "r" ], run = "sort random --reverse=no",                      desc = "Sort randomly" },

	# Goto
	{ on = [ "g", "h" ],       run = "cd ~",             desc = "Go home" },
	{ on = [ "g", "c" ],       run = "cd ~/.config",     desc = "Goto ~/.config" },
	{ on = [ "g", "D" ],       run = "cd ~/Downloads",   desc = "Goto ~/Downloads" },
	{ on = [ "g", "d" ],       run = "cd ~/Documents",   desc = "Goto ~/Documents" },
	{ on = [ "g", "s" ],       run = "cd ~/.suckless",   desc = "Goto ~/.suckless" },
	{ on = [ "g", "S", "h"],       run = "cd ~/Pictures/screenshots",   desc = " ~/Pictures/screenshots" },
	{ on = [ "g", "S", "s" ],  run = "cd ~/.suckless/scripts",   desc = "Goto ~/.suckless/scripts" },
	{ on = [ "g", "S", "d" ],  run = "cd ~/.suckless/dwm",   desc = "Goto ~/.suckless/dwm" },
	{ on = [ "g", "n",],       run = "cd ~/.config/nvim",   desc = "Goto ~/.config/nvim" },
	{ on = [ "g", "<Space>" ], run = "cd --interactive", desc = "Jump interactively" },

	# Tabs
	{ on = "<A-t>", run = "tab_create --current", desc = "Create a new tab with CWD" },

	{ on = "1", run = "tab_switch 0", desc = "Switch to the first tab" },
	{ on = "2", run = "tab_switch 1", desc = "Switch to the second tab" },
	{ on = "3", run = "tab_switch 2", desc = "Switch to the third tab" },
	{ on = "4", run = "tab_switch 3", desc = "Switch to the fourth tab" },
	{ on = "5", run = "tab_switch 4", desc = "Switch to the fifth tab" },
	{ on = "6", run = "tab_switch 5", desc = "Switch to the sixth tab" },
	{ on = "7", run = "tab_switch 6", desc = "Switch to the seventh tab" },
	{ on = "8", run = "tab_switch 7", desc = "Switch to the eighth tab" },
	{ on = "9", run = "tab_switch 8", desc = "Switch to the ninth tab" },

	{ on = "<A-h>", run = "tab_switch -1 --relative", desc = "Switch to the previous tab" },
	{ on = "<A-l>", run = "tab_switch 1 --relative",  desc = "Switch to the next tab" },

	{ on = "<A-S-h>", run = "tab_swap -1", desc = "Swap current tab with previous tab" },
	{ on = "<A-S-l>", run = "tab_swap 1",  desc = "Swap current tab with next tab" },

	# Tasks
	{ on = "w", run = "tasks_show", desc = "Show task manager" },

	# Help
	{ on = "~",    run = "help", desc = "Open help" },
	{ on = "<F1>", run = "help", desc = "Open help" },
  #─────────────────────────── TOGGLE TAG(S) ────────────────────────────
  # Toggle a tag (press any tag key)
  # A tag hint window will show up.
  # Simply press any tag key to toggle that tag for selected or hovered files/folders.
  { on = [ "t", "t", "k" ], run = "plugin simple-tag -- toggle-tag", desc = "Toggle a tag (press any key)" },

  # Fast Toggle tag(s) with fixed keys=!1q. key=!1q tag=!1q or tags=!1q also work
  # NOTE: For key=" (Quotation mark), then use key=\" (Backslash + Quotation mark) instead.
  { on = [ "`" ], run = "plugin simple-tag -- toggle-tag --keys=!1q", desc = "Toggle tag(s) with fixed tag key(s) = (! and 1 and q)" },
  { on = [ "`" ], run = "plugin simple-tag -- toggle-tag --keys=*", desc = "Toggle tag with fixed tag key = *" },
  { on = [ "`" ], run = "plugin simple-tag -- toggle-tag --key=*", desc = "Toggle tag with fixed tag key = *" },

  # Toggle tag(s) with value from input box.
  # A tag hint window and an input box will show up.
  # Simply input tag key(s) to toggle that tags for selected or hovered files/folders.
  # Do not input any delimiter.
  { on = [ "t", "t", "i" ], run = "plugin simple-tag -- toggle-tag --input", desc = "Toggle tag(s) with value from (input box)" },


  #─────────────────────────── ADD TAG(S) ───────────────────────────────
  # Add a tag (press any tag key)
  # A tag hint window will show up.
  # Simply press any new tag key to add to selected or hovered files/folders.
  { on = [ "t", "a", "k" ], run = "plugin simple-tag -- add-tag", desc = "Add a tag (press any key)" },

  # Fast Add tag(s) with fixed keys=!1q. key=!1q tag=!1q or tags=!1q also work
  { on = [ "t", "a", "f" ], run = "plugin simple-tag -- add-tag --keys=!1q", desc = "Add tag(s) with fixed tag keys = (! and 1 and q)" },
  { on = [ "t", "a", "f" ], run = "plugin simple-tag -- add-tag --keys=*", desc = "Add tag with fixed tag key = *" },
  { on = [ "t", "a", "f" ], run = "plugin simple-tag -- add-tag --key=*", desc = "Add tag with fixed tag key = *" },

  # Add tag(s) with value from input box.
  # A tag hint window and an input box will show up.
  # Simply input new tag key(s) to add to selected or hovered files/folders.
  # Do not input any delimiter.
  { on = [ "t", "a", "i" ], run = "plugin simple-tag -- add-tag --input", desc = "Add tag(s) with value from (input box)" },


  #─────────────────────────── REMOVE/DELETE TAG(S) ───────────────────────────
  # Remove a tag (press any tag key)
  # A tag hint window will show up.
  # Simply press any tag key to be removed from selected or hovered files/folders.
  { on = [ "t", "d", "k" ], run = "plugin simple-tag -- remove-tag", desc = "Remove a tag (press any key)" },

  # Fast Remove tag(s) with fixed keys=!1q. key=!1q tag=!1q or tags=!1q also work
  { on = [ "t", "d", "f" ], run = "plugin simple-tag -- remove-tag --keys=!1q", desc = "Remove tag(s) with fixed tag keys = (! and 1 and q)" },
  { on = [ "t", "d", "f" ], run = "plugin simple-tag -- remove-tag --keys=*", desc = "Remove tag with fixed tag key = *" },
  { on = [ "t", "d", "f" ], run = "plugin simple-tag -- remove-tag --key=*", desc = "Remove tag with fixed tag key = *" },

  # Remove tag(s) with value from input box.
  # A tag hint window and an input box will show up.
  # Simply input tag key(s) to be removed from selected or hovered files/folders.
  # Do not input any delimiter.
  { on = [ "t", "d", "i" ], run = "plugin simple-tag -- remove-tag --input", desc = "Remove tag(s) with value from (input box)" },


  #─────────────────────────── REPLACE ALL OLD TAG(S) WITH NEW TAG(S) ───────────────────────────
  # Replace a tag (press any tag key)
  # A tag hint window will show up.
  # Simply press any new tag key for selected or hovered files/folders.
  { on = [ "t", "r", "k" ], run = "plugin simple-tag -- replace-tag", desc = "Replace with a new tag (press any key)" },

  # Fast Replace tag(s) with fixed keys=!1q. key=!1q tag=!1q or tags=!1q also work
  { on = [ "t", "r", "f" ], run = "plugin simple-tag -- replace-tag --keys=!1q", desc = "Replace tag(s) with fixed tag keys = (! and 1 and q)" },
  { on = [ "t", "r", "f" ], run = "plugin simple-tag -- replace-tag --keys=*", desc = "Replace tag(s) with fixed tag key = *" },
  { on = [ "t", "r", "f" ], run = "plugin simple-tag -- replace-tag --key=*", desc = "Replace tag(s) with fixed tag key = *" },

  # Replace tag(s) with value from input box.
  # A tag hint window and an input box will show up.
  # Simply input new tag key(s) for selected or hovered files/folders.
  # Do not input any delimiter.
  { on = [ "t", "r", "i" ], run = "plugin simple-tag -- replace-tag --input", desc = "Replace tag(s) with value from (input box)" },


  #─────────────────────────── EDIT TAG(S) ───────────────────────────
  # Edit a tag for hovered or selected files/folders
  # An input box with current tagged keys and a tag hint window will show up for each hovered or selected files/folders.
  # Simply edit tag key(s) for selected or hovered files/folders.
  # If you cancel any input box, all changes will be discarded.
  { on = [ "t", "e" ], run = "plugin simple-tag -- edit-tag ", desc = "Edit tag(s) (input box)" },


  #  ───────────────────────────── CLEAR TAG(S) ─────────────────────────────
  # Clear all tags from selected or hovered files/folders
  { on = [ "t", "c" ], run = "plugin simple-tag -- clear", desc = "Clear all tags from selected or hovered files" },


  #  ───────────────────────────── CHANGE UI ─────────────────────────────
  # Switch tag indicator between icon > tag key > hidden.
  # Useful when u don't remember the tag key
  { on = [ "t", "u", "s" ], run = "plugin simple-tag -- toggle-ui", desc = "Toggle tag indicator (icon > tag key > hidden)" },

  # Fixed tag indicator mode = hidden (Available modes: hidden|icon|text)
  { on = [ "t", "u", "h" ], run = "plugin simple-tag -- toggle-ui --mode=hidden", desc = "Hide all tags indicator" },

  #  ─────────────────────── FILTER FILES/FOLDERS BY TAGS: ───────────────────────
  # Available filter modes:
  # and → Filter files which contain all of selected tags (Default if mode isn't specified).
  # or → Filter files which contain at least one of selected tags.

  # Filter files/folders by tags
  # NOTE: For yazi < v25.3.7
  #       This use a hacky way to filter files, so it may not work if
  #       there are too many files matched the selected  tags.
  #       Work just file if there are less than 5000 files.
  #       Well,  it depends on your system and the length of file's name.
  # NOTE: For yazi version >= v25.3.7, then this limitation is gone, you can search as many files as you want.

  # Filter files/folders by a tag (press any tag key)
  # A tag hint window will show up.
  # Simply press any new tag key to filter files/folders containing that tag in current directory.
  { on = [ "t", "f" ], run = "plugin simple-tag -- filter", desc = "Filter files/folders by a tag (press any key)" },

  # Fast Filter files/folders with fixed keys=!1q. key=!1q tag=!1q or tags=!1q also work
  # { on = [ "t", "f" ], run = "plugin simple-tag -- filter --key=!", desc = "Filter files/folders by a fixed tag = !" },
  # { on = [ "t", "f" ], run = "plugin simple-tag -- filter --keys=!1q", desc = "Filter files/folders by multiple fixed tag(s) (! and 1 and q)" },

  # Filter files/folders by tag(s) with value from input box.
  # An input box and a tag hint window will show up.
  # Simply input tag key(s) to filter files/folders of current directory.
  # Do not input any delimiter.
  # For example: Input value or --keys=!1q -> filter any files/folders contain all of these tags (! and 1 and q) in current directory.
  { on = [ "t", "F" ], run = "plugin simple-tag -- filter --input", desc = "Filter files/folders by tag(s) (input box)" },

  # Filter files/folders by tag(s) with --mode=or.
  # --mode=or -> Input value or --keys = !1q -> filter any files/folders contain at least one of these tags (! or 1 or q)
  { on = [ "t", "F" ], run = "plugin simple-tag -- filter --input --mode=or", desc = "Filter files/folders by contain tags (input box)" },
  # { on = [ "t", "F" ], run = "plugin simple-tag -- filter --keys=!1q --mode=or", desc = "Filter files/folders by multiple fixed tag(s) (! or 1 or q)" },


  #  ─────────────────────── VISUAL SELECT FILES/FOLDERS BY TAGS: ───────────────────────

  # Avaiable selection actions:
  # replace → Replaces the current selection list with files/folders that have the selected tag.
  # unite → Combines the currently selected files/folders with those that have the selected tag.
  # intersect → Keeps only the files/folders that are present in both the current selection and the tagged items.
  # subtract → Deselects files/folders that have the selected tag.
  # exclude → Keeps only the files/folders that do not have the selected tag.
  # undo → Undos or redoes the last selection action.

  # which_key will popup to choose selection mode
  # And a tag hint window will show up.
  # Simply select a selection mode then press any tag key to select files/folders
  { on = [ "t", "s", "t" ], run = "plugin simple-tag -- toggle-select", desc = "Select a selection action then select a tag key (toggle-select)" },
  # fixed tag(s). --keys=!1q or --key=!1q or --tag=!1q or --tags=!1q. They are the same.
  { on = [ "t", "s", "t" ], run = "plugin simple-tag -- toggle-select --keys=!1q", desc = "" },

  # Run action on files/folders by a tag.
  # A tag hint window will show up.
  # Simply press any tag key to do the folowing action:
  { on = [ "t", "s", "r" ], run = "plugin simple-tag -- replace-select", desc = "replace-select" },
  { on = [ "t", "s", "u" ], run = "plugin simple-tag -- unite-select", desc = "unite-select" },
  { on = [ "t", "s", "i" ], run = "plugin simple-tag -- intersect-select", desc = "intersect-select" },
  { on = [ "t", "s", "s" ], run = "plugin simple-tag -- subtract-select", desc = "subtract-select" },
  { on = [ "t", "s", "e" ], run = "plugin simple-tag -- exclude-select", desc = "exclude-select" },
  # Run action on files/folders by fixed tag(s). --keys=!1q or --key=!1q or --tag=!1q or --tags=!1q. They are the same.
  { on = [ "t", "s", "e" ], run = "plugin simple-tag -- replace-select --keys=!1q", desc = "Replaces the current selection list with files/folders that have (! and 1 and q) tag(s)" },

  # Run action on files/folders by tag(s) with value from input box.
  # A tag hint window will show up.
  # Simply input tag key(s) to do the folowing action:
  { on = [ "t", "s", "R" ], run = "plugin simple-tag -- replace-select --input", desc = "replace-select --input" },
  { on = [ "t", "s", "U" ], run = "plugin simple-tag -- unite-select --input", desc = "unite-select --input" },
  { on = [ "t", "s", "I" ], run = "plugin simple-tag -- intersect-select --input", desc = "intersect-select --input" },
  { on = [ "t", "s", "S" ], run = "plugin simple-tag -- subtract-select --input", desc = "subtract-select --input" },
  { on = [ "t", "s", "E" ], run = "plugin simple-tag -- exclude-select --input", desc = "exclude-select --input" },
  # it also support --mode=or when using with --input or --keys=!1q or --key=!1q or --tag=!1q or --tags=!1q
  { on = [ "t", "s", "R" ], run = "plugin simple-tag -- replace-select --input --mode=or", desc = "replace-select --input --mode=or" },
  { on = [ "t", "s", "R" ], run = "plugin simple-tag -- replace-select --keys=!1q --mode=or", desc = "replace-select --keys=!1q --mode=or" },

  # Undo/Redo selection (only works after using 5 modes above)
  { on = [ "t", "s", "u" ], run = "plugin simple-tag -- undo-select", desc = "Undos/Redos the last selection action" },
]



[tasks]

keymap = [
	{ on = "<Esc>", run = "close", desc = "Close task manager" },
	{ on = "<C-[>", run = "close", desc = "Close task manager" },
	{ on = "<C-c>", run = "close", desc = "Close task manager" },
	{ on = "w",     run = "close", desc = "Close task manager" },

	{ on = "k", run = "arrow -1", desc = "Move cursor up" },
	{ on = "j", run = "arrow 1",  desc = "Move cursor down" },

	{ on = "<Up>",   run = "arrow -1", desc = "Move cursor up" },
	{ on = "<Down>", run = "arrow 1",  desc = "Move cursor down" },

	{ on = "<Enter>", run = "inspect", desc = "Inspect the task" },
	{ on = "x",       run = "cancel",  desc = "Cancel the task" },

	# Help
	{ on = "~",    run = "help", desc = "Open help" },
	{ on = "<F1>", run = "help", desc = "Open help" },
]

[spot]

keymap = [
	{ on = "<Esc>", run = "close", desc = "Close the spot" },
	{ on = "<C-[>", run = "close", desc = "Close the spot" },
	{ on = "<C-c>", run = "close", desc = "Close the spot" },
	{ on = "<Tab>", run = "close", desc = "Close the spot" },

	{ on = "k", run = "arrow -1", desc = "Move cursor up" },
	{ on = "j", run = "arrow 1",  desc = "Move cursor down" },
	{ on = "h", run = "swipe -1", desc = "Swipe to the next file" },
	{ on = "l", run = "swipe 1",  desc = "Swipe to the previous file" },
  

	{ on = "<Up>",    run = "arrow -1", desc = "Move cursor up" },
	{ on = "<Down>",  run = "arrow 1",  desc = "Move cursor down" },
	{ on = "<Left>",  run = "swipe -1", desc = "Swipe to the next file" },
	{ on = "<Right>", run = "swipe 1",  desc = "Swipe to the previous file" },

	# Copy
	{ on = [ "c", "c" ], run = "copy cell", desc = "Copy selected cell" },

	# Help
	{ on = "~",    run = "help", desc = "Open help" },
	{ on = "<F1>", run = "help", desc = "Open help" },
]

[pick]

keymap = [
	{ on = "<Esc>",   run = "close",          desc = "Cancel pick" },
	{ on = "<C-[>",   run = "close",          desc = "Cancel pick" },
	{ on = "<C-c>",   run = "close",          desc = "Cancel pick" },
	{ on = "<Enter>", run = "close --submit", desc = "Submit the pick" },

	{ on = "k", run = "arrow -1", desc = "Move cursor up" },
	{ on = "j", run = "arrow 1",  desc = "Move cursor down" },

	{ on = "<Up>",   run = "arrow -1", desc = "Move cursor up" },
	{ on = "<Down>", run = "arrow 1",  desc = "Move cursor down" },

	# Help
	{ on = "~",    run = "help", desc = "Open help" },
	{ on = "<F1>", run = "help", desc = "Open help" },
]

[input]
keymap = [
	{ on = "<C-c>",   run = "close",          desc = "Cancel input" },
	{ on = "<Enter>", run = "close --submit", desc = "Submit input" },
	{ on = "<Esc>",   run = "escape",         desc = "Go back the normal mode, or cancel input" },
	{ on = "<C-[>",   run = "escape",         desc = "Go back the normal mode, or cancel input" },

	# Mode
	{ on = "i", run = "insert",                              desc = "Enter insert mode" },
	{ on = "a", run = "insert --append",                     desc = "Enter append mode" },
	{ on = "I", run = [ "move -999", "insert" ],             desc = "Move to the BOL, and enter insert mode" },
	{ on = "A", run = [ "move 999", "insert --append" ],     desc = "Move to the EOL, and enter append mode" },
	{ on = "v", run = "visual",                              desc = "Enter visual mode" },
	{ on = "V", run = [ "move -999", "visual", "move 999" ], desc = "Enter visual mode and select all" },

	# Character-wise movement
	{ on = "h",       run = "move -1", desc = "Move back a character" },
	{ on = "l",       run = "move 1",  desc = "Move forward a character" },
	{ on = "<Left>",  run = "move -1", desc = "Move back a character" },
	{ on = "<Right>", run = "move 1",  desc = "Move forward a character" },
	{ on = "<C-b>",   run = "move -1", desc = "Move back a character" },
	{ on = "<C-f>",   run = "move 1",  desc = "Move forward a character" },

	# Word-wise movement
	{ on = "b",     run = "backward",              desc = "Move back to the start of the current or previous word" },
	{ on = "w",     run = "forward",               desc = "Move forward to the start of the next word" },
	{ on = "e",     run = "forward --end-of-word", desc = "Move forward to the end of the current or next word" },
	{ on = "<A-b>", run = "backward",              desc = "Move back to the start of the current or previous word" },
	{ on = "<A-f>", run = "forward --end-of-word", desc = "Move forward to the end of the current or next word" },

	# Line-wise movement
	{ on = "0",      run = "move -999", desc = "Move to the BOL" },
	{ on = "$",      run = "move 999",  desc = "Move to the EOL" },
	{ on = "<C-a>",  run = "move -999", desc = "Move to the BOL" },
	{ on = "<C-e>",  run = "move 999",  desc = "Move to the EOL" },
	{ on = "<Home>", run = "move -999", desc = "Move to the BOL" },
	{ on = "<End>",  run = "move 999",  desc = "Move to the EOL" },

	# Delete
	{ on = "<Backspace>", run = "backspace",         desc = "Delete the character before the cursor" },
	{ on = "<Delete>",    run = "backspace --under", desc = "Delete the character under the cursor" },
	{ on = "<C-h>",       run = "backspace",         desc = "Delete the character before the cursor" },
	{ on = "<C-d>",       run = "backspace --under", desc = "Delete the character under the cursor" },

	# Kill
	{ on = "<C-u>", run = "kill bol",      desc = "Kill backwards to the BOL" },
	{ on = "<C-k>", run = "kill eol",      desc = "Kill forwards to the EOL" },
	{ on = "<C-w>", run = "kill backward", desc = "Kill backwards to the start of the current word" },
	{ on = "<A-d>", run = "kill forward",  desc = "Kill forwards to the end of the current word" },

	# Cut/Yank/Paste
	{ on = "d", run = "delete --cut",                              desc = "Cut the selected characters" },
	{ on = "D", run = [ "delete --cut", "move 999" ],              desc = "Cut until the EOL" },
	{ on = "c", run = "delete --cut --insert",                     desc = "Cut the selected characters, and enter insert mode" },
	{ on = "C", run = [ "delete --cut --insert", "move 999" ],     desc = "Cut until the EOL, and enter insert mode" },
	{ on = "x", run = [ "delete --cut", "move 1 --in-operating" ], desc = "Cut the current character" },
	{ on = [ "y", "y" ], run = "yank",                                      desc = "Copy the selected characters" },
	{ on = "p", run = "paste",                                     desc = "Paste the copied characters after the cursor" },
	{ on = "P", run = "paste --before",                            desc = "Paste the copied characters before the cursor" },

	# Undo/Redo
	{ on = "u",     run = "undo", desc = "Undo the last operation" },
	{ on = "<C-r>", run = "redo", desc = "Redo the last operation" },

	# Help
	{ on = "~",    run = "help", desc = "Open help" },
	{ on = "<F1>", run = "help", desc = "Open help" },
]

[confirm]

keymap = [
	{ on = "<Esc>",   run = "close",          desc = "Cancel the confirm" },
	{ on = "<C-[>",   run = "close",          desc = "Cancel the confirm" },
	{ on = "<C-c>",   run = "close",          desc = "Cancel the confirm" },
	{ on = "<Enter>", run = "close --submit", desc = "Submit the confirm" },

	{ on = "n", run = "close",          desc = "Cancel the confirm" },
	{ on = "y", run = "close --submit", desc = "Submit the confirm" },

	{ on = "k", run = "arrow -1", desc = "Move cursor up" },
	{ on = "j", run = "arrow 1",  desc = "Move cursor down" },

	{ on = "<Up>",   run = "arrow -1", desc = "Move cursor up" },
	{ on = "<Down>", run = "arrow 1",  desc = "Move cursor down" },

	# Help
	{ on = "~",    run = "help", desc = "Open help" },
	{ on = "<F1>", run = "help", desc = "Open help" },
]

[completion]

keymap = [
	{ on = "<C-c>",   run = "close",                                      desc = "Cancel completion" },
	{ on = "<Tab>",   run = "close --submit",                             desc = "Submit the completion" },
	{ on = "<Enter>", run = [ "close --submit", "close_input --submit" ], desc = "Submit the completion and input" },

	{ on = "<A-k>", run = "arrow -1", desc = "Move cursor up" },
	{ on = "<A-j>", run = "arrow 1",  desc = "Move cursor down" },

	{ on = "<Up>",   run = "arrow -1", desc = "Move cursor up" },
	{ on = "<Down>", run = "arrow 1",  desc = "Move cursor down" },

	{ on = "<C-p>", run = "arrow -1", desc = "Move cursor up" },
	{ on = "<C-n>", run = "arrow 1",  desc = "Move cursor down" },

	# Help
	{ on = "~",    run = "help", desc = "Open help" },
	{ on = "<F1>", run = "help", desc = "Open help" },
]

[help]

keymap = [
	{ on = "<Esc>", run = "escape", desc = "Clear the filter, or hide the help" },
	{ on = "<C-[>", run = "escape", desc = "Clear the filter, or hide the help" },
	{ on = "<C-c>", run = "close",  desc = "Hide the help" },

	# Navigation
	{ on = "k", run = "arrow -1", desc = "Move cursor up" },
	{ on = "j", run = "arrow 1",  desc = "Move cursor down" },

	{ on = "<Up>",   run = "arrow -1", desc = "Move cursor up" },
	{ on = "<Down>", run = "arrow 1",  desc = "Move cursor down" },

	# Filtering
	{ on = "f", run = "filter", desc = "Apply a filter for the help items" },
]



# ██████╗ ██╗     ██╗   ██╗ ██████╗ ██╗███╗   ██╗███████╗
# ██╔══██╗██║     ██║   ██║██╔════╝ ██║████╗  ██║██╔════╝
# ██████╔╝██║     ██║   ██║██║  ███╗██║██╔██╗ ██║███████╗
# ██╔═══╝ ██║     ██║   ██║██║   ██║██║██║╚██╗██║╚════██║
# ██║     ███████╗╚██████╔╝╚██████╔╝██║██║ ╚████║███████║
# ╚═╝     ╚══════╝ ╚═════╝  ╚═════╝ ╚═╝╚═╝  ╚═══╝╚══════╝

[[manager.prepend_keymap]]
on   = "l"
run  = "plugin smart-enter"
desc = "Enter the child directory, or open the file"


[[manager.prepend_keymap]]
on   = "H"
run  = "plugin jump-to-char"
desc = "Jump to char"

[[manager.prepend_keymap]]
on   = [ "c", "m" ]
run  = "plugin chmod"
desc = "Chmod on selected files"



[[manager.prepend_keymap]]
on   = "o"
run  = "plugin open-with-cmd --block"
desc = "Open with command in the terminal"

[[manager.prepend_keymap]]
on   = "<C-o>"
run  = "plugin open-with-cmd"
desc = "Open with command"

[[manager.prepend_keymap]]
on = [ "m" ]
run = "plugin relative-motions"
desc = "Trigger a new relative motion"

[[manager.prepend_keymap]]
on = [ "1" ]
run = "plugin relative-motions 1"
desc = "Move in relative steps"

[[manager.prepend_keymap]]
on = [ "2" ]
run = "plugin relative-motions 2"
desc = "Move in relative steps"

[[manager.prepend_keymap]]
on = [ "3" ]
run = "plugin relative-motions 3"
desc = "Move in relative steps"

[[manager.prepend_keymap]]
on = [ "4" ]
run = "plugin relative-motions 4"
desc = "Move in relative steps"

[[manager.prepend_keymap]]
on = [ "5" ]
run = "plugin relative-motions 5"
desc = "Move in relative steps"

[[manager.prepend_keymap]]
on = [ "6" ]
run = "plugin relative-motions 6"
desc = "Move in relative steps"

[[manager.prepend_keymap]]
on = [ "7" ]
run = "plugin relative-motions 7"
desc = "Move in relative steps"

[[manager.prepend_keymap]]
on = [ "8" ]
run = "plugin relative-motions 8"
desc = "Move in relative steps"

[[manager.prepend_keymap]]
on = [ "9" ]
run = "plugin relative-motions 9"
desc = "Move in relative steps"



[[manager.prepend_keymap]]
on = [ "y", "Y" ]
run = ["plugin system-clipboard"]
desc = "System Clipboard"



[[manager.prepend_keymap]]
on   = "j"
run  = "plugin keycalm j"
desc = "Keycalm protection for j"

[[manager.prepend_keymap]]
on   = "k"
run  = "plugin keycalm k"
desc = "Keycalm protection for k"

[[manager.prepend_keymap]]
on = "R"
run = "plugin keycalm  <Esc>"
desc = "Reset keycalm block"


[[manager.prepend_keymap]]
on = ["e"]
run = "plugin ouch zip"
desc = "Compress with ouch"


[[manager.prepend_keymap]]
on = [ "E" ]
run = "plugin eza-preview"
desc = "Toggle tree/list dir preview"


[[manager.prepend_keymap]]
on = [ "-" ]
run = "plugin eza-preview  --inc-level"
desc = "Increment tree level" 


[[manager.prepend_keymap]]
on = [ "_" ]
run = "plugin eza-preview  --dec-level"
desc = "Decrement tree level"

[[manager.prepend_keymap]]
on = [ "$" ]
run = "plugin eza-preview --toggle-follow-symlinks"
desc = "Toggle tree follow symlinks"


# Use K to move up in the parent directory
[[manager.prepend_keymap]]
on = "<A-k>"
run = ["leave", "arrow -1", "enter"]
desc = "Move up in the parent directory"


# Use J to move down in the parent directory
[[manager.prepend_keymap]]
on = "<A-j>"
run = ["leave", "arrow 1", "enter"]
desc = "Move down in the parent directory"

# # toggle-pane plugin
# [[manager.prepend_keymap]]
# on   = "T"
# run  = "plugin toggle-pane min-preview"
# desc = "Show or hide the preview pane"
#
# [[manager.prepend_keymap]]
# on   = "t"
# run  = "plugin toggle-pane max-preview"
# desc = "Maximize or restore the preview pane"



[[manager.prepend_keymap]]
on = "<C-u>"
run = "plugin augment-command -- arrow -5"
desc = "Move cursor up"


[[manager.prepend_keymap]]
on = "<C-d>"
run = "plugin augment-command -- arrow 5"
desc = "Move cursor down"
